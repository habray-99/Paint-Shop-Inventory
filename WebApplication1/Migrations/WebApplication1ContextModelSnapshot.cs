// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(WebApplication1Context))]
    partial class WebApplication1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.HasIndex("Name");

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "Kathmandu",
                            Name = "John Doe",
                            Phone = "9841000001"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "Lalitpur",
                            Name = "Anita Sharma",
                            Phone = "9841000002"
                        });
                });

            modelBuilder.Entity("ProductDisplayView", b =>
                {
                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ProductId");

                    b.Property<decimal>("RetailPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShadeSlug")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VolumeDisplay")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("WholesalePrice")
                        .HasColumnType("TEXT");

                    b.ToTable((string)null);

                    b.ToView("ProductDisplay", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.InventoryStock", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PurchaseDateAd")
                        .HasColumnType("date");

                    b.Property<string>("PurchaseDateBs")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("BatchId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseDateAd");

                    b.HasIndex("PurchaseDateBs");

                    b.ToTable("InventoryStocks");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            CostPrice = 0m,
                            ProductId = 1,
                            PurchaseDateAd = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchaseDateBs = "2081-01-18",
                            Quantity = 100
                        },
                        new
                        {
                            BatchId = 2,
                            CostPrice = 480.00m,
                            ProductId = 2,
                            PurchaseDateAd = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchaseDateBs = "2081-01-22",
                            Quantity = 50
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAd")
                        .HasColumnType("date");

                    b.Property<string>("DateBs")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("Text");

                    b.Property<decimal>("PendingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DateAd");

                    b.HasIndex("DateBs");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            DateAd = new DateTime(2025, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateBs = "2081-01-27",
                            PendingAmount = 0m,
                            TotalAmount = 1000.00m
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 2,
                            DateAd = new DateTime(2025, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateBs = "2081-01-29",
                            PendingAmount = 0.00m,
                            TotalAmount = 500.00m
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.OrderItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ExciseDuty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            ExciseDuty = 56.00m,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1,
                            UnitPrice = 800.00m,
                            VAT = 117.04m
                        },
                        new
                        {
                            ItemId = 2,
                            ExciseDuty = 35.00m,
                            OrderId = 1,
                            ProductId = 2,
                            Quantity = 1,
                            UnitPrice = 500.00m,
                            VAT = 73.15m
                        },
                        new
                        {
                            ItemId = 3,
                            ExciseDuty = 35.00m,
                            OrderId = 2,
                            ProductId = 2,
                            Quantity = 1,
                            UnitPrice = 500.00m,
                            VAT = 73.15m
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsAdvance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PaymentDateAd")
                        .HasColumnType("date");

                    b.Property<string>("PaymentDateBs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentDateAd");

                    b.HasIndex("PaymentDateBs");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            Amount = 1000.00m,
                            IsAdvance = false,
                            OrderId = 1,
                            PaymentDateAd = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentDateBs = "2081-01-28"
                        },
                        new
                        {
                            PaymentId = 2,
                            Amount = 500.00m,
                            IsAdvance = true,
                            OrderId = 2,
                            PaymentDateAd = new DateTime(2025, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentDateBs = "2081-02-01"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RetailPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasComputedColumnSql("ROUND(WholesalePrice + (WholesalePrice * 0.07) + ((WholesalePrice + (WholesalePrice * 0.07)) * 0.13), 2)");

                    b.Property<string>("ShadeSlug")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Volume")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("WholesalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("Category");

                    b.HasIndex("Company");

                    b.HasIndex("Name");

                    b.HasIndex("ShadeSlug");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Category = 1,
                            Company = "Asian Paints",
                            Name = "Premium Paint",
                            RetailPrice = 0m,
                            ShadeSlug = "royal-blue",
                            Volume = 4,
                            WholesalePrice = 800.00m
                        },
                        new
                        {
                            ProductId = 2,
                            Category = 2,
                            Company = "Berger",
                            Name = "Wall Putty",
                            RetailPrice = 0m,
                            ShadeSlug = "white",
                            Volume = 1005,
                            WholesalePrice = 500.00m
                        },
                        new
                        {
                            ProductId = 3,
                            Category = 3,
                            Company = "Nerolac",
                            Name = "Smart Care Polish",
                            RetailPrice = 0m,
                            ShadeSlug = "clear",
                            Volume = 1001,
                            WholesalePrice = 300.00m
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.InventoryStock", b =>
                {
                    b.HasOne("WebApplication1.Models.Product", "Product")
                        .WithMany("InventoryStocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebApplication1.Models.Order", b =>
                {
                    b.HasOne("Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebApplication1.Models.OrderItem", b =>
                {
                    b.HasOne("WebApplication1.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebApplication1.Models.Payment", b =>
                {
                    b.HasOne("WebApplication1.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebApplication1.Models.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("WebApplication1.Models.Product", b =>
                {
                    b.Navigation("InventoryStocks");

                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
